import { Router } from "express";
import controllerDoctor from "./controllers/controller.doctor.js";
import controllerUser from "./controllers/controller.user.js";
import controllerAppointment from "./controllers/controller.appointment.js";
import controllerService from "./controllers/controller.service.js";
import controllerDoctorService from './controllers/controller.doctorService.js';

import jwt from "./token.js";
import controllerEstoque from "./controllers/controller.estoque.js";

const router = Router();

// Doctors...
router.get("/doctors", jwt.ValidateToken, controllerDoctor.Listar);
router.post("/doctors", jwt.ValidateToken, controllerDoctor.Inserir);
router.put("/doctors/:id_doctor", jwt.ValidateToken, controllerDoctor.Editar);
router.delete("/doctors/:id_doctor", jwt.ValidateToken, controllerDoctor.Excluir);  // Exclui médico e dados associados
router.get("/doctors/:id_doctor/services", jwt.ValidateToken, controllerDoctor.ListarServicos);
router.get("/doctors/:id_doctor", jwt.ValidateToken, controllerDoctor.ListarPorId);

// Users...
router.post("/users/register", controllerUser.Inserir);
router.post("/users/login", controllerUser.Login);
router.get("/users/profile", jwt.ValidateToken, controllerUser.Profile);
router.get("/users", jwt.ValidateToken, controllerUser.Listar);
router.get("/users/:id_user", jwt.ValidateToken, controllerUser.ListarPorId);  // Rota para obter dados do usuário específico
router.put("/users/:id_user", jwt.ValidateToken, controllerUser.Editar);
router.delete("/users/:id_user", jwt.ValidateToken, controllerUser.Excluir);

// Appointments...
router.get("/appointments", jwt.ValidateToken, controllerAppointment.ListarByUser);
router.post("/appointments", jwt.ValidateToken, controllerAppointment.Inserir);
router.delete("/appointments/:id_appointment", jwt.ValidateToken, controllerAppointment.Excluir);

// Admin Routes...
router.post("/admin/register", controllerUser.InserirAdmin);
router.post("/admin/login", controllerUser.LoginAdmin);
router.get("/admin/appointments", jwt.ValidateToken, controllerAppointment.Listar);
router.get("/admin/users", jwt.ValidateToken, controllerUser.Listar);
router.get("/admin/appointments/:id_appointment", jwt.ValidateToken, controllerAppointment.ListarId);
router.post("/admin/appointments", jwt.ValidateToken, controllerAppointment.InserirAdmin);
router.put("/admin/appointments/:id_appointment", jwt.ValidateToken, controllerAppointment.EditarAdmin);
//router.get("/admin/estoque", jwt.ValidateToken, controllerEstoque.ListarEstoque); //em criação
router.post("/admin/estoque",  controllerEstoque.InserirEstoque); //em criação


// Serviços
router.get("/services", controllerService.Listar); // Listar todos os serviços
router.post("/services", controllerService.Inserir); // Inserir um novo serviço
router.put("/services/:id_service", controllerService.Editar); // Editar um serviço existente
router.delete("/services/:id_service", controllerService.Excluir); // Excluir um serviço
router.get("/doctors/:id_doctor/services", jwt.ValidateToken, controllerDoctor.ListarServicos);


//DoctorService
router.post('/doctors/services/link', jwt.ValidateToken, controllerDoctorService.VincularServico);




export default router;
